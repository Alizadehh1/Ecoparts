@model Auto_Part_WebUI.Models.Entities.Product

@{
    ViewData["Title"] = "Edit";
}

<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <div class="d-inline">
                    <h4>Brands</h4>
                    <span>
                        Butun brandlar
                    </span>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="page-header-breadcrumb">
                <ul class="breadcrumb-title">
                    <li class="breadcrumb-item" style="float: left;">
                        <a asp-controller="dashboard" asp-action="index"> <i class="feather icon-home"></i> </a>
                    </li>
                    <li class="breadcrumb-item" style="float: left;">
                        <a href="#!">Brendler</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="page-body">
    <div class="card p-3">
        <div class="card-block">
            <form class="row" asp-action="Create" enctype="multipart/form-data" id="productCreate">
                <div class="form-groupImage">
                    <label for="file1" class="control-label">Image</label>
                    <label for="file" class="photo-viewer" id="file-viewer" style="background-image:url('/uploads/images/@Model.ImagePath')"></label>
                    <input name="file" id="file" type="file" class="form-control" onchange="readFile(this)" />
                    <input type="hidden" asp-for="ImagePath" />
                    <span asp-validation-for="ImagePath" class="text-danger"></span>
                </div>
                <div class="col-12 col-lg-6">
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                <label asp-for="Name" class="control-label"></label>
                                <input asp-for="Name" class="form-control" />
                            </div>
                        </div>
                        <div class="col-12 col-lg-6">
                            <div class="form-group">
                                <label asp-for="ShortDescription" class="control-label"></label>
                                <input asp-for="ShortDescription" class="form-control" />
                            </div>
                        </div>
                        <div class="col-12 col-lg-6">
                            <div class="form-group">
                                <label asp-for="Quantity" class="control-label"></label>
                                <input asp-for="Quantity" class="form-control" />
                            </div>
                        </div>
                        <div class="col-12 col-lg-6">
                            <div class="form-group">
                                <label asp-for="CategoryId" class="control-label"></label>
                                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    <div class="tab-control" role="tabcontrol">
                        <div class="tab-page" id="specifications" aria-title="Xususiyyetler" selected>
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Mehsul Kodu</th>
                                        <th>Dəyər</th>
                                    </tr>
                                </thead>
                                <tbody id="myTable">

                                    @foreach (var code in ViewBag.Codes)
                                    {
                                        <tr class="code-checkbox">
                                            <td class="table-row-select">
                                                <input type="checkbox" data-code-id="@code.Id" />
                                            </td>
                                            <th>
                                                <p id="code-@code.Id">@code.Name</p>
                                            </th>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="tab-page" id="pricing" aria-title="Qiymetlendirme">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Növ</th>
                                        <th>Qiymət</th>
                                        <th class="table-operations">
                                            <button class="btn btn-info" onclick="createPricing(event)">
                                                Add row
                                            </button>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Pricings)
                                    {
                                        <tr>
                                            <td>
                                                <select asp-items="@ViewBag.Types" class="form-control select2" selected-id="@item.TypeId"></select>
                                            </td>
                                            <td>
                                                <input type="text" value="@item.Price" class="form-control" />
                                            </td>
                                            <td class="table-operations">
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-12 text-center">
                        <ul class="pagination pagination-lg pager" id="myPager"></ul>
                    </div>
                </div>
                <div class="col-12">
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-success" />
                        <a asp-action="Index" class="btn btn-primary">Back to List</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>



@section css{
    <link rel="stylesheet" type="text/css" href="~/libs/tab-control/tab-control.css">
}

@section js{
    <script src="~/libs/tab-control/tab-control.js"></script>
    <script>

        const selectTypes = `@Html.DropDownList("TypeId",@ViewBag.Types,null,htmlAttributes:new {
                @class="form-control select2",
                id="#s1#"
                })`;
        function readFile(input) {
            let file = input.files[0];

            let reader = new FileReader();


            reader.onload = function () {
                console.log(reader.result);
                $('#file-viewer').css('background-image', `url(${reader.result})`)
            };

            reader.onerror = function () {
                console.log(reader.error);
            };
            reader.readAsDataURL(file);
        }

        $(document).ready(function () {



            $('#productCreate').submit(function (e) {

                e.preventDefault();
                const btn = $(e.currentTarget).find('input[type=submit]');

                $(btn).attr('disable', 'disabled');

                let formData = new FormData(e.currentTarget);

                let indexer = 0;
                let selected = 0;
                const valuesArr = [];
                const idsArr = [];
                $('input[data-code-id]').each(function (index, item) {

                    if (item.checked) {
                        const id = $(item).data('code-id');
                        const idName = `code-${id}`;
                        const value = $(`#${idName}`).text();
                        valuesArr.push(value);
                        idsArr.push(id);
                        selected++;
                    }
                    indexer++;
                    console.log(indexer);
                    if (valuesArr.length == selected) {
                        let text = valuesArr.toString();
                        let text1 = idsArr.toString();
                        formData.set(`Values`, text);
                        formData.set(`Ids`, text1);
                    }
                });

                let pricing = [];
                $('#pricing tbody tr').each(function (index, item) {
                    const typeId = $(item).find('td:nth-child(1) select').val();
                    const value = $(item).find('td:nth-child(2) input').val();


                    pricing.push({
                        typeId: typeId,
                        price: value
                    });
                });
                $(pricing).each(function (index, item) {
                    formData.set(`Pricing[${index}].TypeId`, item.typeId);
                    formData.set(`Pricing[${index}].Price`, item.price);
                    console.log(index);
                    index++;
                });
                /*

                  */
                $.ajax({
                    url: '@Url.Action("Edit")',
                    type: 'post',
                    data: formData,
                    contentType: false,
                    processData: false,
                    beforeSent: function (xhr) {

                    },
                    success: function (response) {
                        if (response.error == undefined) {
                            return;
                        }
                        else if (response.error == true) {
                            toastr.error(response.message, "Xəta!");
                            $(btn).removeAttr('disable');
                            return;
                        }

                        e.currentTarget.reset();
                        toastr.success(response.message, "Ugur");
                        location.href = `@Url.Action("Index")`;
                    },
                    error: function (response) {
                        $(btn).removeAttr('disable');
                        console.warn(response);
                    }
                })
                    .always(function () {

                    });
            });

        });



        //function showErrors(errors) {
        //    errors = errors.filter(function (item, index, arr) {
        //        return arr.map(a => a.propertyName).indexOf(item.propertyName) == index;
        //    });

        //    console.log(errors);
        //    $(`#productCreate span.error`).html('');

        //    $(errors).each(function (index, item) {

        //        const el = $(`#productCreate input[name="${item.propertyName}"]`);
        //        $(el).focus(function () {
        //        const elError = el.next();
        //            elError.html('');
        //        });
        //        let spanError = $(el).next('span.error');

        //        if (spanError.length == 0) {
        //            spanError = $('<span/>', {
        //                class: 'error',
        //                style: 'color: crimson',
        //                html: item.errorMessage
        //            });

        //            $(spanError).insertAfter(el);
        //        }
        //        else {
        //            $(spanError).html(item.errorMessage);
        //        }




        //    });
        //}

        //function blurring(errors) {
        //    $(`#productCreate input[name=""]`).focus(function (item) {
        //        $(`#productCreate span.error`).html('');
        //    });

        //}



        function createPricing(e) {




            e.preventDefault();

            const tBody = $(e.currentTarget).closest('table').find('tbody');
            const tr = $(`<tr>
                            <td>${(selectTypes.replace('#s1#',  newid()))}</td>
                            <td><input type="text"/></td>
                            </tr>`);


            $(tr).find('.select2').each(function (index, item) {
                $(item).select2();
            })


            $(tBody).append(tr);

        }

        function removePricing(e) {
            if ($(e.currentTarget).closest('tbody').find('tr').length == 1)
                return;

            $(e.currentTarget).closest('tr').remove();
        }

        function newid() {
            return "s"+'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }
    </script>

    <script>
        $.fn.pageMe = function (opts) {
            var $this = this,
                defaults = {
                    perPage: 7,
                    showPrevNext: false,
                    hidePageNumbers: false
                },
                settings = $.extend(defaults, opts);

            var listElement = $this;
            var perPage = settings.perPage;
            var children = listElement.children();
            var pager = $('.pager');

            if (typeof settings.childSelector != "undefined") {
                children = listElement.find(settings.childSelector);
            }

            if (typeof settings.pagerSelector != "undefined") {
                pager = $(settings.pagerSelector);
            }

            var numItems = children.length;

            var numPages = Math.ceil(numItems / perPage);

            pager.data("curr", 0);

            if (settings.showPrevNext) {
                $('<li class="page-item"><a href="#" class="prev_link">«</a></li>').appendTo(pager);
            }

            var curr = 0;
            // Added class and id in li start
            while (numPages > curr && (settings.hidePageNumbers == false)) {
                $('<li id="pg' + (curr + 1) + '" class="pg page-item"><a href="#" class="page-link">' + (curr + 1) + '</a></li>').appendTo(pager);
                curr++;
            }
            // Added class and id in li end

            if (settings.showPrevNext) {
                $('<li><a href="#" class="next_link">»</a></li>').appendTo(pager);
            }

            pager.find('.page-link:first').addClass('active');
            pager.find('.prev_link').hide();
            if (numPages <= 1) {
                pager.find('.next_link').hide();
            }
            pager.children().eq(1).addClass("active");

            children.hide();
            children.slice(0, perPage).show();
            if (numPages > 3) {
                $('.pg').hide();
                $('#pg1,#pg2,#pg3').show();
                $("#pg3").after($("<li class='ell'>").html("<span>...</span>"));
            }

            pager.find('li .page-link').click(function () {
                var clickedPage = $(this).html().valueOf() - 1;
                goTo(clickedPage, perPage);
                return false;
            });
            pager.find('li .prev_link').click(function () {
                previous();
                return false;
            });
            pager.find('li .next_link').click(function () {
                next();
                return false;
            });

            function previous() {
                var goToPage = parseInt(pager.data("curr")) - 1;
                goTo(goToPage);
            }

            function next() {
                goToPage = parseInt(pager.data("curr")) + 1;
                goTo(goToPage);
            }

            function goTo(page) {
                var startAt = page * perPage,
                    endOn = startAt + perPage;

                // Added few lines from here start

                $('.pg').hide();
                $(".ell").remove();
                var prevpg = $("#pg" + page).show();
                var currpg = $("#pg" + (page + 1)).show();
                var nextpg = $("#pg" + (page + 2)).show();
                if (prevpg.length == 0) nextpg = $("#pg" + (page + 3)).show();
                if (prevpg.length == 1 && nextpg.length == 0) {
                    prevpg = $("#pg" + (page - 1)).show();
                }
                $("#pg1").show()
                if (curr > 3) {
                    if (page > 1) prevpg.before($("<li class='ell'>").html("<span>...</span>"));
                    if (page < curr - 2) nextpg.after($("<li class='ell'>").html("<span>...</span>"));
                }

                if (page <= numPages - 3) {
                    $("#pg" + numPages.toString()).show();
                }
                currpg.addClass("active").siblings().removeClass("active");
                // Added few lines till here end


                children.css('display', 'none').slice(startAt, endOn).show();

                if (page >= 1) {
                    pager.find('.prev_link').show();
                } else {
                    pager.find('.prev_link').hide();
                }

                if (page < (numPages - 1)) {
                    pager.find('.next_link').show();
                } else {
                    pager.find('.next_link').hide();
                }

                pager.data("curr", page);
                /*pager.children().removeClass("active");
                pager.children().eq(page + 1).addClass("active");*/

            }
        };

        $(document).ready(function () {

            $('#myTable').pageMe({
                pagerSelector: '#myPager',
                showPrevNext: true,
                hidePageNumbers: false,
                perPage: 5
            });

        });
    </script>
}

