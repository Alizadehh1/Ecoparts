@model ShopViewModel
@{
    ViewData["Title"] = "Categories";
}


<nav class="breadcrumb-nav">
    <div class="container">
        <ul class="breadcrumb">
            <li><a asp-action="Index" asp-controller="Home"><i class="d-icon-home"></i></a></li>
            <li>Shop</li>
        </ul>
    </div>
</nav>
<div class="page-content mb-10">
    <div class="container">
        <div class="row main-content-wrap gutter-lg">
            <aside class="col-lg-3 sidebar sidebar-fixed sidebar-toggle-remain shop-sidebar sticky-sidebar-wrapper">
                <div class="sidebar-overlay"></div>
                <a href="#" class="sidebar-toggle"><i class="fas fa-chevron-right"></i></a>
                <a class="sidebar-close" href="#"><i class="d-icon-times"></i></a>
                <div class="sidebar-content">
                    <div class="sticky-sidebar" data-sticky-options="{'top': 10}">
                        <div class="widget widget-collapsible">
                            <h3 class="widget-title">
                                @Model.Category.Name kateqoriyasına uyğun məhsullar
                            </h3>
                            @Extension.GetCategoriesRaw(Model.Categories)
                        </div>
                        <div class="widget widget-collapsible">
                            <h3 class="widget-title">Maşın markaları</h3>
                            <ul class="widget-body filter-items search-ul" style="display: block;">
                                @foreach (var item in Model.Brands)
                                {
                                    <li><a asp-action="brands" asp-route-id="@item.Id">@item.Name</a></li>

                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </aside>
            <div class="col-lg-9 main-content">
                <div class="shop-banner-default banner mb-1"
                     style="background-image: url('/assets/images/ujuj.jpg'); background-color: #4e6582;">
                    <div class="banner-content">
                        <h4 class="banner-subtitle font-weight-bold ls-normal text-uppercase text-white">
                            Ecoparts
                        </h4>
                        <h1 class="banner-title font-weight-bold text-white">
                            onlayn mağaza
                        </h1>
                        <a asp-action="basket" asp-controller="shop" class="btn btn-white btn-outline btn-icon-right btn-rounded text-normal">
                            Səbət <i class="d-icon-arrow-right"></i>
                        </a>
                    </div>
                </div>
                <div style="margin-top:25px;" class="row cols-12 cols-sm-12 product-wrapper">
                    <table class="shop-table cart-table">
                        <thead>
                            <tr>
                                <th></th>
                                <th><span>Adı</span></th>
                                <th><span>Marka</span></th>
                                <th><span>Kateqoriya</span></th>
                                <th><span>Qiymət</span></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.PagedViewModel.Items)
                            {
                                <tr>
                                    <td class="product-thumbnail">
                                        <figure>
                                            <a asp-action="details" asp-route-id="@item.Id">
                                                <img src="~/uploads/images/@item.ImagePath" width="100" height="100" alt="@item.Name">
                                            </a>
                                        </figure>
                                    </td>
                                    <td class="product-name">
                                        <div class="product-name-section">
                                            <a asp-action="details" asp-route-id="@item.Id">@item.Name</a>
                                            <p>@item.MainPartCodeName</p>
                                        </div>
                                    </td>
                                    <td class="product-name">
                                        <div class="product-name-section">
                                            <a asp-action="details" asp-route-id="@item.Id">@item.Category.Brand.Name</a>
                                        </div>
                                    </td>
                                    <td class="product-name">
                                        <div class="product-name-section">
                                            <a asp-action="details" asp-route-id="@item.Id">@item.Category.Name</a>
                                        </div>
                                    </td>
                                    <td class="product-subtotal">
                                        @foreach (var item1 in Model.Pricings)
                                        {
                                            if (item1.ProductId == item.Id)
                                            {
                                                <span id="product-price-type" class="amount">@item1.Price</span><span>&#8380;</span>
                                            }
                                        }

                                    </td>
                                    <td class="d-flex flex-column product-quantity">
                                        <div class="input-group">
                                            <button class="quantity-minus d-icon-minus"></button>
                                            <input class="quantity form-control" id="qty" type="number" min="1" max="1000000">
                                            <button class="quantity-plus d-icon-plus"></button>
                                        </div>
                                        <button data-item-id="@item.Id" onclick="addToCart(event)" style="background-color: #26c;cursor:pointer;border:0px;border-radius:4px;padding:8px;margin-top:15px;color:white;"><i style="margin-right:7px;" class="fa-solid fa-basket-shopping"></i> Səbət</button>
                                        <button data-item-id="@item.Id" onclick="addToWishlist(event)" style="background-color: red; cursor: pointer; border: 0px; border-radius: 4px; padding: 8px; margin-top: 3px; color: white;"><i class="fa-solid fa-heart"></i> Seçilmişlər</button>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
                <nav class="toolbox toolbox-pagination mb-0 pb-0">
                    @if (@Model.PagedViewModel.Items.Count() == 0)
                    {
                        <p class="show-info">Məhsul yoxdur</p>
                    }
                    else
                    {
                        <p class="show-info">@Model.PagedViewModel.Items.Count() məhsuldan 1–@((Model.PagedViewModel.Items.Count() < 12) ? $"{Model.PagedViewModel.Items.Count()}" : "12") məhsul göstərilir</p>
                    }
                    @Model.PagedViewModel.GetPagenation(Url, "Index")
                </nav>
            </div>
        </div>
    </div>
</div>
@section css{
    <link rel="stylesheet" type="text/css" href="~/assets/css/pagination.css" />
}
@section js{
    <script>
        function addToWishlist(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            let data = $(ev.currentTarget).data();
            addToCookie(data.itemId);

            console.log(readFromCookie())
        }
        function readFromCookie() {
            return ($.cookie('cardsForWishlist') || '').split(',');
        }
        function addToCookie(cardId) {
            let items = readFromCookie();
            let length = items.filter(item => item == cardId).length;
            if (length > 0) return;
            items.push(cardId);
            $.cookie('cardsForWishlist', items.toString(), { expires: 7, path: '/' });
            $.ajax({
                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    toastr.success("Successfully Added", response.message)
                    showWishlistCount();
                },
                error: function (response) {
                    toastr["error"]("Unsuccessfully", "Data has not been deleted")
                }
            })
        }

        function showWishlistCount() {
            let items = readFromCookie();
            $('.wishlist-count').html(items.length - 1);

        }
        showWishlistCount();

    </script>
    <script>
        function addToCart(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            let data = $(ev.currentTarget).data();
            let qty = $(ev.currentTarget).prev().find('#qty').val();
            console.log(qty);
            let price = $(ev.currentTarget).parent().prev().find('#product-price-type').html();
            console.log(price);
            //let qty = $(ev.currentTarget).closest('#qty').val();
            if (qty < 1) {
                $('.error').html("Miqdarı düzgün qeyd edin!");
                return;
            }
            $('.error').html("");
            addToBasket(data.itemId, price, qty);
            console.log(readFromBasket());
            showCardCount();
        }
        function readFromBasket() {
            return ($.cookie('cards') || '').split(',');
        }
        function readFromBasketPrices() {
            return ($.cookie('prices') || '').split(',');
        }
        function readFromBasketQty() {
            return ($.cookie('qtys') || '').split(',');
        }
        function addToBasket(cardId, cardPrice, cardQty) {
            let items = readFromBasket();
            let prices = readFromBasketPrices();
            let qtys = readFromBasketQty();
            let length = items.filter(item => item == cardId).length;
            let length1 = prices.filter(item => item == cardPrice).length;
            if (length > 0 && length1 > 0) {
                return;
            }
            items.push(cardId);
            prices.push(cardPrice);
            qtys.push(cardQty);
            $.cookie('cards', items.toString(), { expires: 7, path: '/' });
            $.cookie('prices', prices.toString(), { expires: 7, path: '/' });
            $.cookie('qtys', qtys.toString(), { expires: 7, path: '/' });
            $.ajax({
                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    toastr.success("Səbətə uğurla əlavə edildi", response.message)
                    showCardCount();
                    showCartPrice();
                },
                error: function (response) {
                    toastr["error"]("Uğursuz", "Əlavə edilmədi")
                }
            })
        }

        function showCardCount() {
            let items = readFromBasket();
            $('span.cart-count').html(items.length - 1);

        }
        showCardCount();
        function showCartPrice() {

            let prices = ($.cookie('prices') || '').split(',');
            let qtys = ($.cookie('qtys') || '').split(',');
            let totalPrice = 0;
            for (var i = 0; i < prices.length; i++) {
                for (var j = 0; j < qtys.length; j++) {
                    totalPrice = totalPrice + prices[i] * qtys[j];
                }
            }
            $('span.cart-price').html(totalPrice + "₼");
        }
        showCartPrice();
    </script>
    <script>
        function addToWishlist(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            let data = $(ev.currentTarget).data();
            addToCookie(data.itemId);

            console.log(readFromCookie())
        }
        function readFromCookie() {
            return ($.cookie('cardsForWishlist') || '').split(',');
        }
        function addToCookie(cardId) {
            let items = readFromCookie();
            let length = items.filter(item => item == cardId).length;
            if (length > 0) return;
            items.push(cardId);
            $.cookie('cardsForWishlist', items.toString(), { expires: 7, path: '/' });
            $.ajax({
                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    toastr.success("Seçilmişlərə uğurla əlavə edildi", response.message)
                    showWishlistCount();
                },
                error: function (response) {
                    toastr["error"]("Uğursuz", "Əlavə edilmədi")
                }
            })
        }

        function showWishlistCount() {
            let items = readFromCookie();
            $('.wishlist-count').html(items.length - 1);

        }
        showWishlistCount();

    </script>
}


